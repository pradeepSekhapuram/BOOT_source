From 7e93e1b52dd4085abfd6f4c372625c415f887138 Mon Sep 17 00:00:00 2001
From: Ganesh K <ganesh.k@phytec.in>
Date: Mon, 3 Feb 2020 17:26:16 +0530
Subject: [PATCH 2/5] Added support for Rugged Board A5D2x

Signed-off-by: Ganesh K <ganesh.k@phytec.in>
---
 Config.in.kernel                              |   1 +
 board/Config.in                               |   5 +-
 board/rugged_board_a5d2x/Config.in.board      |  12 +
 board/rugged_board_a5d2x/Config.in.linux_arg  |   2 +
 board/rugged_board_a5d2x/board.mk             |   2 +
 board/rugged_board_a5d2x/rugged_board_a5d2x.c | 494 ++++++++++++++++++
 board/rugged_board_a5d2x/rugged_board_a5d2x.h | 104 ++++
 .../rugged_board_a5d2xqspi_uboot_defconfig    |  10 +
 .../rugged_board_a5d2xsd1_uboot_defconfig     |   7 +
 include/board.h                               |   4 +
 10 files changed, 640 insertions(+), 1 deletion(-)
 create mode 100644 board/rugged_board_a5d2x/Config.in.board
 create mode 100644 board/rugged_board_a5d2x/Config.in.linux_arg
 create mode 100644 board/rugged_board_a5d2x/board.mk
 create mode 100644 board/rugged_board_a5d2x/rugged_board_a5d2x.c
 create mode 100644 board/rugged_board_a5d2x/rugged_board_a5d2x.h
 create mode 100644 board/rugged_board_a5d2x/rugged_board_a5d2xqspi_uboot_defconfig
 create mode 100644 board/rugged_board_a5d2x/rugged_board_a5d2xsd1_uboot_defconfig

diff --git a/Config.in.kernel b/Config.in.kernel
index 617e110..59a71a5 100644
--- a/Config.in.kernel
+++ b/Config.in.kernel
@@ -29,6 +29,7 @@ source "board/sama5d4_xplained/Config.in.linux_arg"
 source "board/sama5d2_ptc_ek/Config.in.linux_arg"
 source "board/sama5d2_xplained/Config.in.linux_arg"
 source "board/sama5d27_som1_ek/Config.in.linux_arg"
+source "board/rugged_board_a5d2x/Config.in.linux_arg"
 source "contrib/board/Config.in.linux_arg"
 
 endif
diff --git a/board/Config.in b/board/Config.in
index e7dfe6e..6504f1c 100644
--- a/board/Config.in
+++ b/board/Config.in
@@ -26,6 +26,7 @@ source "board/sama5d4_xplained/Config.in.board"
 source "board/sama5d2_ptc_ek/Config.in.board"
 source "board/sama5d2_xplained/Config.in.board"
 source "board/sama5d27_som1_ek/Config.in.board"
+source "board/rugged_board_a5d2x/Config.in.board"
 source "board/sama5d2_lpddr2sip_vb/Config.in.board"
 source "contrib/board/Config.in.board"
 
@@ -51,6 +52,7 @@ config CONFIG_BOARDNAME
 	default "sama5d2_ptc_ek" if CONFIG_SAMA5D2_PTC_EK
 	default "sama5d2_xplained" if CONFIG_SAMA5D2_XPLAINED
 	default "sama5d27_som1_ek" if CONFIG_SAMA5D27_SOM1_EK
+	default "rugged_board_a5d2x" if CONFIG_RUGGED_BOARD_A5D2X
 	default "sama5d2_lpddr2sip_vb" if CONFIG_SAMA5D2_LPDDR2SIP_VB
 source "contrib/board/Config.in.boardname"
 
@@ -328,7 +330,7 @@ config CONFIG_CRYSTAL
 
 config CONFIG_CRYSTAL
 	string
-	default "CRYSTAL_12_000MHZ"	if CONFIG_CRYSTAL_12_000MHZ 
+	default "CRYSTAL_12_000MHZ"	if CONFIG_CRYSTAL_12_000MHZ
 	default "CRYSTAL_16_000MHZ"	if CONFIG_CRYSTAL_16_000MHZ
 	default "CRYSTAL_16_36766MHZ"	if CONFIG_CRYSTAL_16_36766MHZ
 	default "CRYSTAL_18_432MHZ"	if CONFIG_CRYSTAL_18_432MHZ
@@ -341,6 +343,7 @@ choice
 	default CONFIG_CPU_CLK_492MHZ if CONFIG_SAMA5D2_PTC_EK
 	default CONFIG_CPU_CLK_498MHZ if CONFIG_SAMA5D2_XPLAINED
 	default CONFIG_CPU_CLK_492MHZ if CONFIG_SAMA5D27_SOM1_EK
+	default CONFIG_CPU_CLK_492MHZ if CONFIG_RUGGED_BOARD_A5D2x
 	default CONFIG_CPU_CLK_498MHZ if CONFIG_SAMA5D2_LPDDR2SIP_VB
 
 
diff --git a/board/rugged_board_a5d2x/Config.in.board b/board/rugged_board_a5d2x/Config.in.board
new file mode 100644
index 0000000..7c3af60
--- /dev/null
+++ b/board/rugged_board_a5d2x/Config.in.board
@@ -0,0 +1,12 @@
+config CONFIG_RUGGED_BOARD_A5D2X
+	bool "rugged_board_a5d2x"
+	select SAMA5D2
+	select CONFIG_CPU_V7
+	select CONFIG_DDRC
+	select ALLOW_DATAFLASH
+	select ALLOW_SDCARD
+	select ALLOW_CPU_CLK_492MHZ
+	select ALLOW_CRYSTAL_24_000MHZ
+	select SUPPORT_BUS_SPEED_164MHZ
+	help
+	  Use the RUGGED_BOARD A5D27 Development board
diff --git a/board/rugged_board_a5d2x/Config.in.linux_arg b/board/rugged_board_a5d2x/Config.in.linux_arg
new file mode 100644
index 0000000..e668ff8
--- /dev/null
+++ b/board/rugged_board_a5d2x/Config.in.linux_arg
@@ -0,0 +1,2 @@
+config CONFIG_LINUX_KERNEL_ARG_STRING
+	default "console=ttyS0,115200 earlyprintk root=/dev/mmcblk0p2 rw rootwait" if CONFIG_RUGGED_BOARD_A5D2X && (CONFIG_SDCARD || CONFIG_QSPI)
diff --git a/board/rugged_board_a5d2x/board.mk b/board/rugged_board_a5d2x/board.mk
new file mode 100644
index 0000000..013572f
--- /dev/null
+++ b/board/rugged_board_a5d2x/board.mk
@@ -0,0 +1,2 @@
+CPPFLAGS += -DCONFIG_RUGGED_BOARD_A5D2X
+ASFLAGS += -DCONFIG_RUGGED_BOARD_A5D2X
diff --git a/board/rugged_board_a5d2x/rugged_board_a5d2x.c b/board/rugged_board_a5d2x/rugged_board_a5d2x.c
new file mode 100644
index 0000000..a897860
--- /dev/null
+++ b/board/rugged_board_a5d2x/rugged_board_a5d2x.c
@@ -0,0 +1,494 @@
+/* ----------------------------------------------------------------------------
+ *         Microchip Microcontroller Software Support
+ * ----------------------------------------------------------------------------
+ * Copyright (c) 2017, Microchip Corporation
+ *
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * - Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the disclaimer below.
+ *
+ * Microchip's name may not be used to endorse or promote products derived from
+ * this software without specific prior written permission.
+ *
+ * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
+ * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
+ * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
+ * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+#include "common.h"
+#include "ddramc.h"
+#include "debug.h"
+#include "gpio.h"
+#include "hardware.h"
+#include "l2cc.h"
+#include "matrix.h"
+#include "pmc.h"
+#include "rugged_board_a5d2x.h"
+#include "string.h"
+#include "timer.h"
+#include "usart.h"
+#include "watchdog.h"
+#include "arch/at91_ddrsdrc.h"
+#include "arch/at91_pio.h"
+#include "arch/at91_pmc.h"
+#include "arch/at91_rstc.h"
+#include "arch/at91_sfr.h"
+#include "arch/tz_matrix.h"
+
+static void at91_dbgu_hw_init(void)
+{
+	const struct pio_desc dbgu_pins[] = {
+		{"RXD1", CONFIG_SYS_DBGU_RXD_PIN, 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"TXD1", CONFIG_SYS_DBGU_TXD_PIN, 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+
+	pio_configure(dbgu_pins);
+	pmc_sam9x5_enable_periph_clk(CONFIG_SYS_DBGU_ID);
+}
+
+static void initialize_dbgu(void)
+{
+	unsigned int baudrate = 115200;
+
+	at91_dbgu_hw_init();
+
+	if (pmc_check_mck_h32mxdiv())
+		usart_init(BAUDRATE(MASTER_CLOCK / 2, baudrate));
+	else
+		usart_init(BAUDRATE(MASTER_CLOCK, baudrate));
+}
+
+#if defined(CONFIG_MATRIX)
+static int matrix_configure_slave(void)
+{
+	unsigned int ddr_port;
+	unsigned int ssr_setting, sasplit_setting, srtop_setting;
+
+	/*
+	 * Matrix 0 (H64MX)
+	 */
+
+	/*
+	 * 0: Bridge from H64MX to AXIMX
+	 * (Internal ROM, Crypto Library, PKCC RAM): Always Secured
+	 */
+
+	/* 1: H64MX Peripheral Bridge */
+
+	/* 2 ~ 9 DDR2 Port1 ~ 7: Non-Secure */
+	srtop_setting = MATRIX_SRTOP(0, MATRIX_SRTOP_VALUE_128M);
+	sasplit_setting = MATRIX_SASPLIT(0, MATRIX_SASPLIT_VALUE_128M);
+	ssr_setting = MATRIX_LANSECH_NS(0) |
+		      MATRIX_RDNSECH_NS(0) |
+		      MATRIX_WRNSECH_NS(0);
+	/* DDR port 0 not used from NWd */
+	for (ddr_port = 1; ddr_port < 8; ddr_port++) {
+		matrix_configure_slave_security(AT91C_BASE_MATRIX64,
+					(H64MX_SLAVE_DDR2_PORT_0 + ddr_port),
+					srtop_setting,
+					sasplit_setting,
+					ssr_setting);
+	}
+
+	/*
+	 * 10: Internal SRAM 128K
+	 * TOP0 is set to 128K
+	 * SPLIT0 is set to 64K
+	 * LANSECH0 is set to 0, the low area of region 0 is the Securable one
+	 * RDNSECH0 is set to 0, region 0 Securable area is secured for reads.
+	 * WRNSECH0 is set to 0, region 0 Securable area is secured for writes
+	 */
+	srtop_setting = MATRIX_SRTOP(0, MATRIX_SRTOP_VALUE_128K);
+	sasplit_setting = MATRIX_SASPLIT(0, MATRIX_SASPLIT_VALUE_64K);
+	ssr_setting = MATRIX_LANSECH_S(0) |
+		      MATRIX_RDNSECH_S(0) |
+		      MATRIX_WRNSECH_S(0);
+	matrix_configure_slave_security(AT91C_BASE_MATRIX64,
+					H64MX_SLAVE_INTERNAL_SRAM,
+					srtop_setting,
+					sasplit_setting,
+					ssr_setting);
+
+	/* 11:  Internal SRAM 128K (Cache L2) */
+	/* 12:  QSPI0 */
+	/* 13:  QSPI1 */
+	/* 14:  AESB */
+
+	/*
+	 * Matrix 1 (H32MX)
+	 */
+
+	/* 0: Bridge from H32MX to H64MX: Not Secured */
+
+	/* 1: H32MX Peripheral Bridge 0: Not Secured */
+
+	/* 2: H32MX Peripheral Bridge 1: Not Secured */
+
+	/*
+	 * 3: External Bus Interface
+	 * EBI CS0 Memory(256M) ----> Slave Region 0, 1
+	 * EBI CS1 Memory(256M) ----> Slave Region 2, 3
+	 * EBI CS2 Memory(256M) ----> Slave Region 4, 5
+	 * EBI CS3 Memory(128M) ----> Slave Region 6
+	 * NFC Command Registers(128M) -->Slave Region 7
+	 *
+	 * NANDFlash(EBI CS3) --> Slave Region 6: Non-Secure
+	 */
+	srtop_setting =	MATRIX_SRTOP(6, MATRIX_SRTOP_VALUE_128M) |
+			MATRIX_SRTOP(7, MATRIX_SRTOP_VALUE_128M);
+	sasplit_setting = MATRIX_SASPLIT(6, MATRIX_SASPLIT_VALUE_128M) |
+			  MATRIX_SASPLIT(7, MATRIX_SASPLIT_VALUE_128M);
+	ssr_setting = MATRIX_LANSECH_NS(6) |
+		      MATRIX_RDNSECH_NS(6) |
+		      MATRIX_WRNSECH_NS(6) |
+		      MATRIX_LANSECH_NS(7) |
+		      MATRIX_RDNSECH_NS(7) |
+		      MATRIX_WRNSECH_NS(7);
+	matrix_configure_slave_security(AT91C_BASE_MATRIX32,
+					H32MX_EXTERNAL_EBI,
+					srtop_setting,
+					sasplit_setting,
+					ssr_setting);
+
+	/* 4: NFC SRAM (4K): Non-Secure */
+	srtop_setting = MATRIX_SRTOP(0, MATRIX_SRTOP_VALUE_8K);
+	sasplit_setting = MATRIX_SASPLIT(0, MATRIX_SASPLIT_VALUE_8K);
+	ssr_setting = MATRIX_LANSECH_NS(0) |
+		      MATRIX_RDNSECH_NS(0) |
+		      MATRIX_WRNSECH_NS(0);
+	matrix_configure_slave_security(AT91C_BASE_MATRIX32,
+					H32MX_NFC_SRAM,
+					srtop_setting,
+					sasplit_setting,
+					ssr_setting);
+
+	/* 5:
+	 * USB Device High Speed Dual Port RAM (DPR): 1M
+	 * USB Host OHCI registers: 1M
+	 * USB Host EHCI registers: 1M
+	 */
+	srtop_setting = MATRIX_SRTOP(0, MATRIX_SRTOP_VALUE_1M) |
+			MATRIX_SRTOP(1, MATRIX_SRTOP_VALUE_1M) |
+			MATRIX_SRTOP(2, MATRIX_SRTOP_VALUE_1M);
+	sasplit_setting = MATRIX_SASPLIT(0, MATRIX_SASPLIT_VALUE_1M) |
+			  MATRIX_SASPLIT(1, MATRIX_SASPLIT_VALUE_1M) |
+			  MATRIX_SASPLIT(2, MATRIX_SASPLIT_VALUE_1M);
+	ssr_setting = MATRIX_LANSECH_NS(0) |
+		      MATRIX_LANSECH_NS(1) |
+		      MATRIX_LANSECH_NS(2) |
+		      MATRIX_RDNSECH_NS(0) |
+		      MATRIX_RDNSECH_NS(1) |
+		      MATRIX_RDNSECH_NS(2) |
+		      MATRIX_WRNSECH_NS(0) |
+		      MATRIX_WRNSECH_NS(1) |
+		      MATRIX_WRNSECH_NS(2);
+	matrix_configure_slave_security(AT91C_BASE_MATRIX32,
+					H32MX_USB,
+					srtop_setting,
+					sasplit_setting,
+					ssr_setting);
+
+	return 0;
+}
+
+static unsigned int security_ps_peri_id[] = {
+	0,
+};
+
+static int matrix_config_periheral(void)
+{
+	unsigned int *peri_id = security_ps_peri_id;
+	unsigned int array_size = sizeof(security_ps_peri_id) /
+				  sizeof(unsigned int);
+	int ret;
+
+	ret = matrix_configure_peri_security(peri_id, array_size);
+	if (ret)
+		return -1;
+
+	return 0;
+}
+
+static int matrix_init(void)
+{
+	int ret;
+
+	matrix_write_protect_disable(AT91C_BASE_MATRIX64);
+	matrix_write_protect_disable(AT91C_BASE_MATRIX32);
+
+	ret = matrix_configure_slave();
+	if (ret)
+		return -1;
+
+	ret = matrix_config_periheral();
+	if (ret)
+		return -1;
+
+	return 0;
+}
+#endif
+
+#ifdef CONFIG_DDR2
+static void ddramc_reg_config(struct ddramc_register *ddramc_config)
+{
+	ddramc_config->mdr = AT91C_DDRC2_DBW_16_BITS |
+			     AT91C_DDRC2_MD_DDR2_SDRAM;
+
+	ddramc_config->cr = AT91C_DDRC2_NC_DDR10_SDR9 |
+			    AT91C_DDRC2_NR_13 |
+			    AT91C_DDRC2_CAS_3 |
+			    AT91C_DDRC2_DISABLE_RESET_DLL |
+			    AT91C_DDRC2_WEAK_STRENGTH_RZQ7 |
+			    AT91C_DDRC2_ENABLE_DLL |
+			    AT91C_DDRC2_NB_BANKS_4 |
+			    AT91C_DDRC2_NDQS_ENABLED |
+			    AT91C_DDRC2_DECOD_INTERLEAVED |
+			    AT91C_DDRC2_UNAL_SUPPORTED;
+
+	ddramc_config->rtr = 0x511;
+
+	ddramc_config->t0pr = AT91C_DDRC2_TRAS_(7) |
+			      AT91C_DDRC2_TRCD_(3) |
+			      AT91C_DDRC2_TWR_(3) |
+			      AT91C_DDRC2_TRC_(9) |
+			      AT91C_DDRC2_TRP_(3) |
+			      AT91C_DDRC2_TRRD_(2) |
+			      AT91C_DDRC2_TWTR_(2) |
+			      AT91C_DDRC2_TMRD_(2);
+
+	ddramc_config->t1pr = AT91C_DDRC2_TRFC_(22) |
+			      AT91C_DDRC2_TXSNR_(23) |
+			      AT91C_DDRC2_TXSRD_(200) |
+			      AT91C_DDRC2_TXP_(2);
+
+	ddramc_config->t2pr = AT91C_DDRC2_TXARD_(2) |
+			      AT91C_DDRC2_TXARDS_(8) |
+			      AT91C_DDRC2_TRPA_(4) |
+			      AT91C_DDRC2_TRTP_(2) |
+			      AT91C_DDRC2_TFAW_(8);
+}
+
+static void ddr2_init(void)
+{
+	struct ddramc_register ddramc_reg;
+	unsigned int reg;
+
+	ddramc_reg_config(&ddramc_reg);
+
+	pmc_enable_periph_clock(AT91C_ID_MPDDRC);
+	pmc_enable_system_clock(AT91C_PMC_DDR);
+
+	reg = AT91C_MPDDRC_RD_DATA_PATH_ONE_CYCLES;
+	writel(reg, (AT91C_BASE_MPDDRC + MPDDRC_RD_DATA_PATH));
+
+	reg = readl(AT91C_BASE_MPDDRC + MPDDRC_IO_CALIBR);
+	reg &= ~AT91C_MPDDRC_RDIV;
+	reg &= ~AT91C_MPDDRC_TZQIO;
+	reg |= AT91C_MPDDRC_RDIV_DDR2_RZQ_50;
+	reg |= AT91C_MPDDRC_TZQIO_(101);
+	writel(reg, (AT91C_BASE_MPDDRC + MPDDRC_IO_CALIBR));
+
+	ddram_initialize(AT91C_BASE_MPDDRC, AT91C_BASE_DDRCS, &ddramc_reg);
+
+	ddramc_dump_regs(AT91C_BASE_MPDDRC);
+}
+#endif
+
+/**
+ * The MSBs [bits 31:16] of the CAN Message RAM for CAN0 and CAN1
+ * are configured in 0x210000, instead of the default configuration
+ * 0x200000, to avoid conflict with SRAM map for PM.
+ */
+#define CAN_MESSAGE_RAM_MSB	0x21
+
+void at91_init_can_message_ram(void)
+{
+	writel(AT91C_CAN0_MEM_ADDR_(CAN_MESSAGE_RAM_MSB) |
+	       AT91C_CAN1_MEM_ADDR_(CAN_MESSAGE_RAM_MSB),
+	       (AT91C_BASE_SFR + SFR_CAN));
+}
+
+static void at91_red_led_on(void)
+{
+	pio_set_gpio_output(AT91C_PIN_PA(27), 0);
+}
+
+#ifdef CONFIG_HW_INIT
+void hw_init(void)
+{
+	at91_disable_wdt();
+
+	at91_red_led_on();
+
+	pmc_cfg_plla(PLLA_SETTINGS);
+
+	/* Initialize PLLA charge pump */
+	/* No need: we keep what is set in ROM code */
+	//pmc_init_pll(0x3);
+	pmc_cfg_mck(BOARD_PRESCALER_PLLA);
+
+	writel(AT91C_RSTC_KEY_UNLOCK | AT91C_RSTC_URSTEN,
+	       AT91C_BASE_RSTC + RSTC_RMR);
+
+#ifdef CONFIG_MATRIX
+	matrix_init();
+#endif
+	initialize_dbgu();
+
+	timer_init();
+
+#ifdef CONFIG_DDR2
+	ddr2_init();
+#endif
+	l2cache_prepare();
+
+	at91_init_can_message_ram();
+}
+#endif
+
+#ifdef CONFIG_QSPI
+void at91_qspi_hw_init(void)
+{
+#if defined(CONFIG_QSPI_BUS0)
+#if defined(CONFIG_QSPI0_IOSET_1)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI0_SCK",	AT91C_PIN_PA(0), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI0_CS",	AT91C_PIN_PA(1), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI0_IO0",	AT91C_PIN_PA(2), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI0_IO1",	AT91C_PIN_PA(3), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI0_IO2",	AT91C_PIN_PA(4), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI0_IO3",	AT91C_PIN_PA(5), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#elif defined(CONFIG_QSPI0_IOSET_2)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI0_SCK",	AT91C_PIN_PA(14), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{"QSPI0_CS",	AT91C_PIN_PA(15), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{"QSPI0_IO0",	AT91C_PIN_PA(16), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{"QSPI0_IO1",	AT91C_PIN_PA(17), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{"QSPI0_IO2",	AT91C_PIN_PA(18), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{"QSPI0_IO3",	AT91C_PIN_PA(19), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#elif defined(CONFIG_QSPI0_IOSET_3)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI0_SCK",	AT91C_PIN_PA(22), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{"QSPI0_CS",	AT91C_PIN_PA(23), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{"QSPI0_IO0",	AT91C_PIN_PA(24), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{"QSPI0_IO1",	AT91C_PIN_PA(25), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{"QSPI0_IO2",	AT91C_PIN_PA(26), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{"QSPI0_IO3",	AT91C_PIN_PA(27), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#else
+#error "No QSPI0 IOSET defined"
+#endif
+
+#elif defined(CONFIG_QSPI_BUS1)
+
+#if defined(CONFIG_QSPI1_IOSET_1)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI1_SCK",	AT91C_PIN_PA(6),  0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI1_CS",	AT91C_PIN_PA(11), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI1_IO0",	AT91C_PIN_PA(7),  0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI1_IO1",	AT91C_PIN_PA(8),  0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI1_IO2",	AT91C_PIN_PA(9),  0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI1_IO3",	AT91C_PIN_PA(10), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#elif defined(CONFIG_QSPI1_IOSET_2)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI1_SCK",	AT91C_PIN_PB(5),  0, PIO_DEFAULT, PIO_PERIPH_D},
+		{"QSPI1_CS",	AT91C_PIN_PB(6),  0, PIO_DEFAULT, PIO_PERIPH_D},
+		{"QSPI1_IO0",	AT91C_PIN_PB(7),  0, PIO_DEFAULT, PIO_PERIPH_D},
+		{"QSPI1_IO1",	AT91C_PIN_PB(8),  0, PIO_DEFAULT, PIO_PERIPH_D},
+		{"QSPI1_IO2",	AT91C_PIN_PB(9),  0, PIO_DEFAULT, PIO_PERIPH_D},
+		{"QSPI1_IO3",	AT91C_PIN_PB(10), 0, PIO_DEFAULT, PIO_PERIPH_D},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#elif defined(CONFIG_QSPI1_IOSET_3)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI1_SCK",	AT91C_PIN_PB(14), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"QSPI1_CS",	AT91C_PIN_PB(15), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"QSPI1_IO0",	AT91C_PIN_PB(16), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"QSPI1_IO1",	AT91C_PIN_PB(17), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"QSPI1_IO2",	AT91C_PIN_PB(18), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"QSPI1_IO3",	AT91C_PIN_PB(19), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#else
+#error "No QSPI1 IOSET defined"
+#endif
+#else
+#error "No QSPI Bus defined"
+#endif
+
+	pio_configure(qspi_pins);
+	pmc_sam9x5_enable_periph_clk(CONFIG_SYS_ID_QSPI);
+}
+#endif
+
+#ifdef CONFIG_SDCARD
+#ifdef CONFIG_OF_LIBFDT
+void at91_board_set_dtb_name(char *of_name)
+{
+	strcpy(of_name, "rugged_board_a5d2x.dtb");
+}
+#endif
+
+#define ATMEL_SDHC_GCKDIV_VALUE		1
+
+void at91_sdhc_hw_init(void)
+{
+#ifdef CONFIG_SDHC0
+	const struct pio_desc sdmmc_pins[] = {
+		{"SDMMC0_CK",   AT91C_PIN_PA(0), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_CMD",  AT91C_PIN_PA(1), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT0", AT91C_PIN_PA(2), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT1", AT91C_PIN_PA(3), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT2", AT91C_PIN_PA(4), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT3", AT91C_PIN_PA(5), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT4", AT91C_PIN_PA(6), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT5", AT91C_PIN_PA(7), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT6", AT91C_PIN_PA(8), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT7", AT91C_PIN_PA(9), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_RSTN", AT91C_PIN_PA(10), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_VDDSEL", AT91C_PIN_PA(11), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_WP",   AT91C_PIN_PA(12), 1, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_CD",   AT91C_PIN_PA(13), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#endif
+
+#ifdef CONFIG_SDHC1
+	const struct pio_desc sdmmc_pins[] = {
+		{"SDMMC1_DAT0",	AT91C_PIN_PA(18), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_DAT1",	AT91C_PIN_PA(19), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_DAT2",	AT91C_PIN_PA(20), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_DAT3",	AT91C_PIN_PA(21), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_CK",	AT91C_PIN_PA(22), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_CMD",	AT91C_PIN_PA(28), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_CD",	AT91C_PIN_PA(30), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#endif
+
+	pio_configure(sdmmc_pins);
+
+	pmc_sam9x5_enable_periph_clk(CONFIG_SYS_ID_SDHC);
+	pmc_enable_periph_generated_clk(CONFIG_SYS_ID_SDHC,
+					GCK_CSS_UPLL_CLK,
+					ATMEL_SDHC_GCKDIV_VALUE);
+}
+#endif
diff --git a/board/rugged_board_a5d2x/rugged_board_a5d2x.h b/board/rugged_board_a5d2x/rugged_board_a5d2x.h
new file mode 100644
index 0000000..b88f078
--- /dev/null
+++ b/board/rugged_board_a5d2x/rugged_board_a5d2x.h
@@ -0,0 +1,104 @@
+/* ----------------------------------------------------------------------------
+ *         Microchip Microcontroller Software Support
+ * ----------------------------------------------------------------------------
+ * Copyright (c) 2017, Microchip Corporation
+ *
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * - Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the disclaimer below.
+ *
+ * Microchip's name may not be used to endorse or promote products derived from
+ * this software without specific prior written permission.
+ *
+ * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
+ * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
+ * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
+ * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+#ifndef __SAMA5D2_SOM1_EK_H__
+#define __SAMA5D2_SOM1_EK_H__
+
+/*
+ * PMC Settings
+ */
+#define BOARD_MAINOSC		24000000
+
+/* PCK: 492MHz, MCK: 164MHz */
+#define BOARD_PLLA_MULA		40
+
+#define BOARD_PCK		((unsigned long)((BOARD_MAINOSC * (BOARD_PLLA_MULA + 1)) / 2))
+#define BOARD_MCK		((unsigned long)((BOARD_MAINOSC * (BOARD_PLLA_MULA + 1)) / 2 / 3))
+
+#define BOARD_CKGR_PLLA		(AT91C_CKGR_SRCA | AT91C_CKGR_OUTA_0)
+#define BOARD_PLLACOUNT		(0x3F << 8)
+#define BOARD_MULA		((AT91C_CKGR_MULA << 2) & (BOARD_PLLA_MULA << 18))
+#define BOARD_DIVA		(AT91C_CKGR_DIVA & 1)
+
+#define BOARD_PRESCALER_MAIN_CLOCK	(AT91C_PMC_PLLADIV2_2 \
+					| AT91C_PMC_MDIV_3 \
+					| AT91C_PMC_CSS_MAIN_CLK)
+
+#define BOARD_PRESCALER_PLLA		(AT91C_PMC_H32MXDIV_H32MXDIV2 \
+					| AT91C_PMC_PLLADIV2_2 \
+					| AT91C_PMC_MDIV_3 \
+					| AT91C_PMC_CSS_PLLA_CLK)
+
+#define MASTER_CLOCK		164000000
+
+#define PLLA_SETTINGS		(BOARD_CKGR_PLLA | \
+				BOARD_PLLACOUNT | \
+				BOARD_MULA | \
+				BOARD_DIVA)
+
+/*
+ * DBGU Settings
+ */
+#define	USART_BASE	AT91C_BASE_UART1
+#define CONFIG_SYS_DBGU_RXD_PIN		AT91C_PIN_PD(2)
+#define CONFIG_SYS_DBGU_TXD_PIN		AT91C_PIN_PD(3)
+#define CONFIG_SYS_DBGU_ID		AT91C_ID_UART1
+
+/*
+ * DataFlash Settings
+ */
+#define CONFIG_SYS_SPI_CLOCK	AT91C_SPI_CLK
+#define CONFIG_SYS_SPI_MODE	SPI_MODE3
+
+#if defined(CONFIG_QSPI)
+#if defined(CONFIG_QSPI_BUS0)
+#define	CONFIG_SYS_BASE_QSPI		AT91C_BASE_QSPI0
+#define	CONFIG_SYS_BASE_QSPI_MEM	AT91C_BASE_QSPI0_MEM
+#define	CONFIG_SYS_ID_QSPI		AT91C_ID_QSPI0
+
+#elif defined(CONFIG_QSPI_BUS1)
+#define	CONFIG_SYS_BASE_QSPI		AT91C_BASE_QSPI1
+#define	CONFIG_SYS_BASE_QSPI_MEM	AT91C_BASE_QSPI1_MEM
+#define	CONFIG_SYS_ID_QSPI		AT91C_ID_QSPI1
+#endif
+
+#endif
+
+/*
+ * SDHC Settings
+ */
+#ifdef CONFIG_SDHC0
+#define CONFIG_SYS_BASE_SDHC	AT91C_BASE_SDHC0
+#define CONFIG_SYS_ID_SDHC	AT91C_ID_SDMMC0
+#endif
+
+#ifdef CONFIG_SDHC1
+#define CONFIG_SYS_BASE_SDHC	AT91C_BASE_SDHC1
+#define CONFIG_SYS_ID_SDHC	AT91C_ID_SDMMC1
+#endif
+
+#endif
diff --git a/board/rugged_board_a5d2x/rugged_board_a5d2xqspi_uboot_defconfig b/board/rugged_board_a5d2x/rugged_board_a5d2xqspi_uboot_defconfig
new file mode 100644
index 0000000..2eadece
--- /dev/null
+++ b/board/rugged_board_a5d2x/rugged_board_a5d2xqspi_uboot_defconfig
@@ -0,0 +1,10 @@
+CONFIG_RUGGED_BOARD_A5D2X=y
+CONFIG_RAM_64MB=y
+CONFIG_SPI_CLK=66000000
+CONFIG_QSPI=y
+CONFIG_QSPI_BUS1=y
+CONFIG_QSPI1_IOSET_2=y
+CONFIG_IMG_ADDRESS="0x00040000"
+CONFIG_JUMP_ADDR="0x22000000"
+CONFIG_DEBUG=y
+# CONFIG_ENTER_NWD is not set
diff --git a/board/rugged_board_a5d2x/rugged_board_a5d2xsd1_uboot_defconfig b/board/rugged_board_a5d2x/rugged_board_a5d2xsd1_uboot_defconfig
new file mode 100644
index 0000000..4ebfd80
--- /dev/null
+++ b/board/rugged_board_a5d2x/rugged_board_a5d2xsd1_uboot_defconfig
@@ -0,0 +1,7 @@
+CONFIG_RUGGED_BOARD_A5D2X=y
+CONFIG_RAM_64MB=y
+CONFIG_SDCARD=y
+CONFIG_SDHC1=y
+CONFIG_JUMP_ADDR="0x22000000"
+CONFIG_DEBUG=y
+# CONFIG_ENTER_NWD is not set
diff --git a/include/board.h b/include/board.h
index a478e3e..544d284 100644
--- a/include/board.h
+++ b/include/board.h
@@ -100,6 +100,10 @@
 #include "sama5d27_som1_ek.h"
 #endif
 
+#ifdef CONFIG_RUGGED_BOARD_A5D2X
+#include "rugged_board_a5d2x.h"
+#endif
+
 #ifdef CONFIG_SAMA5D2_LPDDR2SIP_VB
 #include "sama5d2_lpddr2sip_vb.h"
 #endif
-- 
2.25.1

